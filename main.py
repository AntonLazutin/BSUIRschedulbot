import os
import asyncio

from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.bot_command import BotCommand
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from backend.config import *
from backend.parser import parse
from backend.services import *

from handlers.schedule import register_handlers_schedule
from handlers.common import register_handlers_common

from dotenv import load_dotenv, find_dotenv

from database.db_handler import Database


load_dotenv(find_dotenv())

bot = Bot(os.environ.get('API_KEY'))

dp = Dispatcher(bot=bot, storage=MemoryStorage())

db = Database()


async def set_commands(bot: Bot):
    commands = [
        BotCommand('/start', description='–ù–∞—á–∏–Ω–∞–µ–º üåÖ'),
        BotCommand('/schedule', description='–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –≥—Ä—É–ø–ø—ã'),
        BotCommand('/favorites', description='–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã'),
        BotCommand('/cancel', description='–û—Ç–º–µ–Ω–∞'),
    ]
    await bot.set_my_commands(commands=commands)


# @dp.message_handler(commands=['start'])
# async def start(message: types.Message):
#     keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     buttons = ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã", "–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã", "–û—Ç–º–µ–Ω–∞"]
#     keyboard.row(*buttons)
#     await bot.send_message(message.from_id, text="Helloooooo", reply_markup=keyboard)


# @dp.message_handler(lambda message: message.text=="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã")
# async def group_schedule(message: types.Message):
#     await message.answer("–¢—É—Ç –±—É–¥–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")


# @dp.message_handler(lambda message: message.text=="–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã")
# async def favorites(message: types.Message):
#     await message.answer("–¢—É—Ç –±—É–¥–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")


# @dp.message_handler(lambda message: message.text=="–û—Ç–º–µ–Ω–∞")
# async def exit(message: types.Message):
#     await message.answer(text="–ü–æ–∫–∞, –ø–æ–∫–∞!", reply_markup=types.ReplyKeyboardRemove())




async def main():

    register_handlers_schedule(dp=dp)
    register_handlers_common(dp=dp)

    await set_commands(bot=bot)

    await dp.start_polling()


if __name__ == "__main__":
    asyncio.run(main())